name: Prod Release (image only)

on:
  push:
    branches: [ main ]         # merge to main triggers prod image
    tags:     [ 'v*.*.*' ]     # optional semantic version tags
  workflow_dispatch: {}

concurrency:
  group: prod-release
  cancel-in-progress: false

permissions:
  contents: read
  packages: write

env:
  JAVA_VERSION: '21'
  IMAGE_NAME: ghcr.io/${{ github.repository }}/todo-api
  DOCKER_CONTEXT: ./isys3001-todo-backend
  DOCKERFILE_PATH: ./isys3001-todo-backend/Dockerfile

jobs:
  verify:
    name: Build & Test (gate)
    runs-on: ubuntu-latest

    env:
      DB_URL: ${{ secrets.DB_URL }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

    outputs:
      sha_tag: ${{ steps.sha.outputs.tag }}
      ver_tag: ${{ steps.ver.outputs.tag }}
      ver_minor: ${{ steps.ver.outputs.minor }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}
          cache: maven

      - name: Build & Test
        run: mvn -B -DskipTests=false verify

      - name: Compute SHA tag
        id: sha
        run: echo "tag=prod-${GITHUB_SHA::7}" >> "$GITHUB_OUTPUT"

      # If this is a tag like v1.2.3, produce extra tags 1.2.3 and 1.2
      - name: Parse semver tag (if any)
        id: ver
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/v*.*.* ]]; then
            V="${GITHUB_REF#refs/tags/v}"
            echo "tag=${V}" >> "$GITHUB_OUTPUT"
            echo "minor=${V%.*}" >> "$GITHUB_OUTPUT"
          else
            echo "tag=" >> "$GITHUB_OUTPUT"
            echo "minor=" >> "$GITHUB_OUTPUT"
          fi

  docker:
    name: Build & Push Docker (GHCR)
    runs-on: ubuntu-latest
    needs: verify
    steps:
      - uses: actions/checkout@v4

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: ${{ env.DOCKER_CONTEXT }}
          file: ${{ env.DOCKERFILE_PATH }}
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ needs.verify.outputs.sha_tag }}
            ${{ env.IMAGE_NAME }}:prod-latest
            ${{ needs.verify.outputs.ver_tag && format('{0}:{1}', env.IMAGE_NAME, needs.verify.outputs.ver_tag) || '' }}
            ${{ needs.verify.outputs.ver_minor && format('{0}:{1}', env.IMAGE_NAME, needs.verify.outputs.ver_minor) || '' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
